//
//  NoteDetailsPresenter.swift
//  NoteApp
//
//  Created by asbul on 06.06.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
import Foundation
protocol NoteDetailsPresentationLogic {
    func presentNoteDetails(response: NoteDetails.Response.ResponseType)
//    func showAlert(response: NoteDetails.CheckNoteIsEmpty.Response)
//    func passNote()
}

class NoteDetailsPresenter: NoteDetailsPresentationLogic {
    weak var viewController: NoteDetailsDisplayLogic?

    func presentNoteDetails(response: NoteDetails.Response.ResponseType) {
        switch response {
        case .presentNoteDetails(note: let note):
            viewController?.displayNoteDetails(viewModel: .displayNoteDetails(
                noteHeader: note?.header ?? "",
                noteText: note?.text ?? "",
                noteDate: formatDate(date: note?.date)))
        case .checkNote(isEmpty: let isEmpty):
            if isEmpty {
                viewController?.displayNoteDetails(viewModel: .showAlert)
            }
        }
    }
//    func presentNoteDetails(response: NoteDetails.ShowNoteDetails.Response) {
//        let noteDate = formatDate(date: response.noteDate)
//
//        let viewModel = NoteDetails.ShowNoteDetails.ViewModel(
//            noteHeader: response.noteHeader ?? "",
//            noteText: response.noteText ?? "",
//            noteDate: noteDate
//        )
//        viewController?.displayNoteDetails(viewModel: viewModel)
//    }
//
//    func showAlert(response: NoteDetails.CheckNoteIsEmpty.Response) {
//        let viewModel = NoteDetails.CheckNoteIsEmpty.ViewModel(isEmptyNote: response.isEmptyNote)
//        viewController?.showAlert(viewModel: viewModel)
//    }
//
//    func passNote() {
//        viewController?.passNote()
//    }

    private func formatDate(date: Date?) -> String {
        guard let date = date else { return "" }
        let formatter = DateFormatter()
        formatter.locale = Locale(identifier: "ru_RU")
        formatter.dateFormat = "dd.MM.YYYY EEEE HH:mm"
        return formatter.string(from: date)
    }
}
