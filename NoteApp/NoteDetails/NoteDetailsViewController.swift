//
//  NoteDetailsViewController.swift
//  NoteApp
//
//  Created by asbul on 06.06.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NoteDetailsDisplayLogic: AnyObject {
    func displayNoteDetails(viewModel: NoteDetails.ShowNoteDetails.ViewModel)
}

class NoteDetailsViewController: UIViewController {

    private var noteHeaderTextField = UITextField()
    private var noteBodyTextView = UITextView()
    private var dateLabel = UILabel()

    private var readyBarButtonItem = UIBarButtonItem()

    private var bottomConstraint: NSLayoutConstraint!
    private var isEditingNote: Bool = false

    var interactor: NoteDetailsBusinessLogic?
    var router: (NSObjectProtocol & NoteDetailsRoutingLogic & NoteDetailsDataPassing)?

    var note: Note?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        passRequest()
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
        
    private func passRequest() {
        let request = NoteDetails.ShowNoteDetails.Request(note: note)
        interactor?.provideNoteDetails(request: request)
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = NoteDetailsInteractor()
        let presenter = NoteDetailsPresenter()
        let router = NoteDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
}

extension NoteDetailsViewController: NoteDetailsDisplayLogic {
    func displayNoteDetails(viewModel: NoteDetails.ShowNoteDetails.ViewModel) {
        noteHeaderTextField.text = viewModel.noteHeader
        noteBodyTextView.text = viewModel.noteText
        dateLabel.text = viewModel.noteDate
    }
}
